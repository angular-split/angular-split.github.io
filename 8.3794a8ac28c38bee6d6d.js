(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{Z9WT:function(e,t,i){"use strict";i.r(t),i.d(t,"DocumentationModule",function(){return m});var o=i("ofXK"),n=i("tyNb"),a=i("fXoL");function b(e,t){if(1&e&&(a.Nb(0,"tr"),a.Nb(1,"td"),a.oc(2),a.Mb(),a.Nb(3,"td"),a.oc(4),a.Mb(),a.Nb(5,"td"),a.Nb(6,"code"),a.oc(7),a.Mb(),a.Mb(),a.Lb(8,"td",6),a.Mb()),2&e){var i=t.$implicit;a.yb(2),a.pc(i.name),a.yb(2),a.pc(i.type),a.yb(3),a.pc(i.default),a.yb(1),a.bc("innerHTML",i.details,a.ic)}}function r(e,t){if(1&e&&(a.Nb(0,"tr"),a.Nb(1,"td"),a.oc(2),a.Mb(),a.Nb(3,"td"),a.Nb(4,"code"),a.oc(5),a.Mb(),a.Mb(),a.Lb(6,"td",6),a.Mb()),2&e){var i=t.$implicit;a.yb(2),a.pc(i.name),a.yb(3),a.pc(i.value),a.yb(1),a.bc("innerHTML",i.details,a.ic)}}function c(e,t){if(1&e&&(a.Nb(0,"tr"),a.Nb(1,"td"),a.oc(2),a.Mb(),a.Nb(3,"td"),a.Nb(4,"code"),a.oc(5),a.Mb(),a.Mb(),a.Lb(6,"td",6),a.Mb()),2&e){var i=t.$implicit;a.yb(2),a.pc(i.name),a.yb(3),a.pc(i.type),a.yb(1),a.bc("innerHTML",i.details,a.ic)}}function s(e,t){if(1&e&&(a.Nb(0,"tr"),a.Nb(1,"td"),a.oc(2),a.Mb(),a.Nb(3,"td"),a.oc(4),a.Mb(),a.Nb(5,"td"),a.Nb(6,"code"),a.oc(7),a.Mb(),a.Mb(),a.Lb(8,"td",6),a.Mb()),2&e){var i=t.$implicit;a.yb(2),a.pc(i.name),a.yb(2),a.pc(i.type),a.yb(3),a.pc(i.default),a.yb(1),a.bc("innerHTML",i.details,a.ic)}}function d(e,t){if(1&e&&(a.Nb(0,"tr"),a.Nb(1,"td"),a.Nb(2,"code"),a.oc(3),a.Mb(),a.Mb(),a.Lb(4,"td",6),a.Mb()),2&e){var i=t.$implicit;a.yb(3),a.pc(i.name),a.yb(1),a.bc("innerHTML",i.details,a.ic)}}function l(e,t){if(1&e&&(a.Nb(0,"tr"),a.Nb(1,"td"),a.Nb(2,"code"),a.oc(3),a.Mb(),a.Mb(),a.Lb(4,"td",6),a.Mb()),2&e){var i=t.$implicit;a.yb(3),a.pc(i.name),a.yb(1),a.bc("innerHTML",i.details,a.ic)}}function u(e,t){if(1&e&&(a.Nb(0,"tr"),a.Nb(1,"td"),a.Nb(2,"code"),a.oc(3),a.Mb(),a.Mb(),a.Lb(4,"td",6),a.Mb()),2&e){var i=t.$implicit;a.yb(3),a.pc(i.name),a.yb(1),a.bc("innerHTML",i.details,a.ic)}}var p=function(){function e(){this.splitDoc={inputs:[{name:"dir",type:"string",default:'"ltr"',details:'Indicates the directionality of the areas: <code>"ltr"</code> (left to right) or <code>"rtl"</code> (right to left).'},{name:"direction",type:"string",default:'"horizontal"',details:'Select split direction: <code>"horizontal"</code> or <code>"vertical"</code>.'},{name:"disabled",type:"boolean",default:"false",details:"Disable the dragging feature (remove cursor/image on gutters). <code>(gutterClick)</code>/<code>(gutterDblClick)</code> still emits."},{name:"gutterDblClickDuration",type:"number",default:"0",details:"Milliseconds to detect a double click on a gutter. Set it around 300-500ms if you want to use <code>(gutterDblClick)</code> event."},{name:"gutterSize",type:"number",default:"11",details:"Gutters's size (dragging elements) in pixels."},{name:"gutterStep",type:"number",default:"1",details:"Gutter step while moving in pixels."},{name:"restrictMove",type:"boolean",default:"false",details:"Set to <code>true</code> if you want to limit gutter move to adjacent areas only."},{name:"unit",type:"string",default:'"percent"',details:'Selected unit you want to use: <code>"percent"</code> or <code>"pixel"</code> to specify area sizes.'},{name:"useTransition",type:"boolean",default:"false",details:'Add transition when toggling visibility using <code>[visible]</code> or <code>[size]</code> changes.<br><u>Warning: Transitions are not working for <a href="https://github.com/philipwalton/flexbugs#flexbug-16">IE/Edge/Safari</a></u>'}],outputs:[{name:"dragEnd",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when drag ends."},{name:"dragStart",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when drag starts."},{name:"gutterDblClick",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when user double clicks on a gutter. See <code>[gutterDblClickDuration]</code> input."},{name:"gutterClick",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when user clicks on a gutter. See <code>[gutterDblClickDuration]</code> input."},{name:"transitionEnd",value:"Array<number>",details:'Emit when transition ends (could be triggered from <code>[visible]</code> or <code>[size]</code> changes).<br>Only if <code>[useTransition]="true"</code>.<br><u>Warning: Transitions are not working for <a href="https://github.com/philipwalton/flexbugs#flexbug-16">IE/Edge/Safari</a></u>'}],class:[{name:"dragProgress$",type:"Observable<{gutterNum: number, sizes: Array<number>}>",details:"Emit when dragging. Replace old <code>(dragProgress)</code> template event for better flexibility about change detection mechanism.<br><u>Warning: Running outside zone by design, if you need to notify angular add</u> <code>this.splitEl.dragProgress$.subscribe(x => this.ngZone.run(() => this.x = x));</code>"},{name:"getVisibleAreaSizes()",type:"() => Array<number>",details:"Get all <b>visible</b> area sizes."},{name:"setVisibleAreaSizes()",type:"(Array<number>) => boolean",details:"Set all <b>visible</b> area sizes in one go, return a boolean to know if input values were correct. Useful when combined with <code>dragProgress$</code> to sync multiple splits."}]},this.splitAreaDoc={inputs:[{name:"lockSize",type:"boolean",default:"false",details:"Lock area size, same as <code>minSize</code> = <code>maxSize</code> = <code>size</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"},{name:"maxSize",type:"number",default:"null",details:"Maximum pixel or percent size, should be equal to or larger than provided <code>[size]</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"},{name:"minSize",type:"number",default:"null",details:"Minimum pixel or percent size, should be equal to or smaller than provided <code>[size]</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"},{name:"order",type:"number",default:"null",details:"Order of the area. Used to maintain the order of areas when toggling their visibility. Toggling area visibility without specifying an <code>order</code> leads to weird behavior"},{name:"size",type:"number|'*'",default:"-",details:'Size of the area in selected unit (<code>percent</code>/<code>pixel</code>).<br><u>Percent mode:</u> All areas sizes should equal to 100, If not, all areas will have the same size.<br><u>Pixel mode:</u> An area with  wildcard size (<code>[size]="\'*\'"</code>) is mandatory (only one) and can\'t have <code>[visible]="false"</code> or <code>minSize</code>/<code>maxSize</code>/<code>lockSize</code> properties.'},{name:"visible",type:"boolean",default:"true",details:"Hide area visually but still present in the DOM, use <code>ngIf</code> to completely remove it.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"}]},this.cssClasses={split:[{name:"ui-init",details:"Added after component initialization."},{name:"ui-horizontal / ui-vertical",details:'Depends on <code>&lt;ui-split [direction]="x"&gt;</code>.'},{name:"ui-disabled",details:'Added when <code>&lt;ui-split [disabled]="true"&gt;</code>.'},{name:"ui-transition",details:'Added when <code>&lt;ui-split [useTransition]="true"&gt;</code>.'},{name:"ui-dragging",details:"Added while a gutter is dragged."}],area:[{name:"ui-split-area",details:"Added on all areas."},{name:"ui-hidden",details:'Added when <code>&lt;ui-split-area [visible]="false"&gt;</code>.'}],gutter:[{name:"ui-split-gutter",details:"Added on all gutters."},{name:"ui-dragged",details:"Added on gutter while dragged."}]}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=a.Eb({type:e,selectors:[["sp-doc"]],decls:107,vars:7,consts:[[1,"container"],[1,"sel"],[1,"selContent"],[1,"table","table-striped"],[4,"ngFor","ngForOf"],[2,"width","40%"],[3,"innerHTML"]],template:function(e,t){1&e&&(a.Nb(0,"div",0),a.Nb(1,"h4"),a.Nb(2,"b"),a.oc(3,"SplitComponent"),a.Mb(),a.oc(4,"\xa0"),a.Nb(5,"span",1),a.oc(6,"(selector: '"),a.Nb(7,"span",2),a.oc(8,"as-split"),a.Mb(),a.oc(9,"' / exportAs: '"),a.Nb(10,"span",2),a.oc(11,"asSplit"),a.Mb(),a.oc(12,"')"),a.Mb(),a.Mb(),a.Nb(13,"table",3),a.Nb(14,"thead"),a.Nb(15,"tr"),a.Nb(16,"th"),a.oc(17,"@Input()"),a.Mb(),a.Nb(18,"th"),a.oc(19,"Type"),a.Mb(),a.Nb(20,"th"),a.oc(21,"Default"),a.Mb(),a.Nb(22,"th"),a.oc(23,"Details"),a.Mb(),a.Mb(),a.Mb(),a.Nb(24,"tbody"),a.mc(25,b,9,4,"tr",4),a.Mb(),a.Mb(),a.Nb(26,"table",3),a.Nb(27,"thead"),a.Nb(28,"tr"),a.Nb(29,"th"),a.oc(30,"@Output()"),a.Mb(),a.Nb(31,"th"),a.oc(32,"Value"),a.Mb(),a.Nb(33,"th"),a.oc(34,"Details"),a.Mb(),a.Mb(),a.Mb(),a.Nb(35,"tbody"),a.mc(36,r,7,3,"tr",4),a.Mb(),a.Mb(),a.Nb(37,"table",3),a.Nb(38,"thead"),a.Nb(39,"tr"),a.Nb(40,"th"),a.oc(41,"Access from TS class"),a.Mb(),a.Nb(42,"th"),a.oc(43,"Type"),a.Mb(),a.Nb(44,"th"),a.oc(45,"Details"),a.Mb(),a.Mb(),a.Mb(),a.Nb(46,"tbody"),a.mc(47,c,7,3,"tr",4),a.Mb(),a.Mb(),a.Lb(48,"br"),a.Lb(49,"br"),a.Nb(50,"h4"),a.Nb(51,"b"),a.oc(52,"SplitAreaDirective"),a.Mb(),a.oc(53,"\xa0"),a.Nb(54,"span",1),a.oc(55,"(selector: '"),a.Nb(56,"span",2),a.oc(57,"as-split-area, [as-split-area]"),a.Mb(),a.oc(58,"' / exportAs: '"),a.Nb(59,"span",2),a.oc(60,"asSplitArea"),a.Mb(),a.oc(61,"')"),a.Mb(),a.Mb(),a.Nb(62,"table",3),a.Nb(63,"thead"),a.Nb(64,"tr"),a.Nb(65,"th"),a.oc(66,"@Input()"),a.Mb(),a.Nb(67,"th"),a.oc(68,"Type"),a.Mb(),a.Nb(69,"th"),a.oc(70,"Default"),a.Mb(),a.Nb(71,"th"),a.oc(72,"Details"),a.Mb(),a.Mb(),a.Mb(),a.Nb(73,"tbody"),a.mc(74,s,9,4,"tr",4),a.Mb(),a.Mb(),a.Lb(75,"br"),a.Lb(76,"br"),a.Nb(77,"h4"),a.Nb(78,"b"),a.oc(79,"CSS classes"),a.Mb(),a.Mb(),a.Nb(80,"table",3),a.Nb(81,"thead"),a.Nb(82,"tr"),a.Nb(83,"th",5),a.oc(84,"Split element classes"),a.Mb(),a.Nb(85,"th"),a.oc(86,"Details"),a.Mb(),a.Mb(),a.Mb(),a.Nb(87,"tbody"),a.mc(88,d,5,2,"tr",4),a.Mb(),a.Mb(),a.Nb(89,"table",3),a.Nb(90,"thead"),a.Nb(91,"tr"),a.Nb(92,"th",5),a.oc(93,"Area element classes"),a.Mb(),a.Nb(94,"th"),a.oc(95,"Details"),a.Mb(),a.Mb(),a.Mb(),a.Nb(96,"tbody"),a.mc(97,l,5,2,"tr",4),a.Mb(),a.Mb(),a.Nb(98,"table",3),a.Nb(99,"thead"),a.Nb(100,"tr"),a.Nb(101,"th",5),a.oc(102,"Gutter element classes"),a.Mb(),a.Nb(103,"th"),a.oc(104,"Details"),a.Mb(),a.Mb(),a.Mb(),a.Nb(105,"tbody"),a.mc(106,u,5,2,"tr",4),a.Mb(),a.Mb(),a.Mb()),2&e&&(a.yb(25),a.bc("ngForOf",t.splitDoc.inputs),a.yb(11),a.bc("ngForOf",t.splitDoc.outputs),a.yb(11),a.bc("ngForOf",t.splitDoc.class),a.yb(27),a.bc("ngForOf",t.splitAreaDoc.inputs),a.yb(14),a.bc("ngForOf",t.cssClasses.split),a.yb(9),a.bc("ngForOf",t.cssClasses.area),a.yb(9),a.bc("ngForOf",t.cssClasses.gutter))},directives:[o.j],styles:["[_nghost-%COMP%] {\n        display: block;\n        width: 100%;\n        margin: 50px 0;\n      }\n      h4[_ngcontent-%COMP%] {\n        margin: 20px 0;\n      }\n      .sel[_ngcontent-%COMP%] {\n        font-size: 16px;\n        color: #adadad;\n      }\n      tr[_ngcontent-%COMP%]    > th[_ngcontent-%COMP%] {\n        color: #adadad;\n      }\n      tr[_ngcontent-%COMP%]    > th[_ngcontent-%COMP%]:first-child, .selContent[_ngcontent-%COMP%] {\n        font-weight: bold;\n        color: #ffc421;\n      }\n      tr[_ngcontent-%COMP%]    > td[_ngcontent-%COMP%]:first-child {\n        font-weight: bold;\n      }"]}),e}(),m=function(){function e(){}return e.\u0275mod=a.Ib({type:e}),e.\u0275inj=a.Hb({factory:function(t){return new(t||e)},imports:[[o.c,n.f.forChild([{path:"",component:p}])]]}),e}()}}]);