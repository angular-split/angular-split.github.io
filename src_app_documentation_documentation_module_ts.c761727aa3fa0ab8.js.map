{"version":3,"file":"src_app_documentation_documentation_module_ts.c761727aa3fa0ab8.js","mappings":"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","sources":["./src/app/documentation/documentation.component.ts","./src/app/documentation/documentation.module.ts","webpack:///./src/app/documentation/documentation.component.ts?40cc"],"sourcesContent":["import { Component } from '@angular/core'\n\n@Component({\n  selector: 'sp-doc',\n  styles: [\n    `\n      :host {\n        display: block;\n        width: 100%;\n        margin: 50px 0;\n      }\n      h4 {\n        margin: 20px 0;\n      }\n      .sel {\n        font-size: 16px;\n        color: #adadad;\n      }\n      tr > th {\n        color: #adadad;\n      }\n      tr > th:first-child,\n      .selContent {\n        font-weight: bold;\n        color: #ffc421;\n      }\n      tr > td:first-child {\n        font-weight: bold;\n      }\n    `,\n  ],\n  templateUrl: './documentation.component.html',\n})\nexport class DocumentationComponent {\n  readonly splitDoc = {\n    inputs: [\n      {\n        name: 'dir',\n        type: 'string',\n        default: '\"ltr\"',\n        details:\n          'Indicates the directionality of the areas: <code>\"ltr\"</code> (left to right) or <code>\"rtl\"</code> (right to left).',\n      },\n      {\n        name: 'direction',\n        type: 'string',\n        default: '\"horizontal\"',\n        details: 'Select split direction: <code>\"horizontal\"</code> or <code>\"vertical\"</code>.',\n      },\n      {\n        name: 'disabled',\n        type: 'boolean',\n        default: 'false',\n        details:\n          'Disable the dragging feature (remove cursor/image on gutters). <code>(gutterClick)</code>/<code>(gutterDblClick)</code> still emits.',\n      },\n      {\n        name: 'gutterDblClickDuration',\n        type: 'number',\n        default: '0',\n        details: `Milliseconds to detect a double click on a gutter. Set it around 300-500ms if you want to use <code>(gutterDblClick)</code> event.`,\n      },\n      {\n        name: 'gutterSize',\n        type: 'number',\n        default: '11',\n        details: `Gutters's size (dragging elements) in pixels.`,\n      },\n      {\n        name: 'gutterStep',\n        type: 'number',\n        default: '1',\n        details: `Gutter step while moving in pixels.`,\n      },\n      {\n        name: 'restrictMove',\n        type: 'boolean',\n        default: 'false',\n        details: 'Set to <code>true</code> if you want to limit gutter move to adjacent areas only.',\n      },\n      {\n        name: 'unit',\n        type: 'string',\n        default: '\"percent\"',\n        details: `Selected unit you want to use: <code>\"percent\"</code> or <code>\"pixel\"</code> to specify area sizes.`,\n      },\n      {\n        name: 'useTransition',\n        type: 'boolean',\n        default: 'false',\n        details:\n          'Add transition when toggling visibility using <code>[visible]</code> or <code>[size]</code> changes.<br><u>Warning: Transitions are not working for <a href=\"https://github.com/philipwalton/flexbugs#flexbug-16\">IE/Edge/Safari</a></u>',\n      },\n    ],\n    outputs: [\n      {\n        name: 'dragEnd',\n        value: '{gutterNum: number, sizes: Array<number>}',\n        details: 'Emit when drag ends.',\n      },\n      {\n        name: 'dragStart',\n        value: '{gutterNum: number, sizes: Array<number>}',\n        details: 'Emit when drag starts.',\n      },\n      {\n        name: 'gutterDblClick',\n        value: '{gutterNum: number, sizes: Array<number>}',\n        details: 'Emit when user double clicks on a gutter. See <code>[gutterDblClickDuration]</code> input.',\n      },\n      {\n        name: 'gutterClick',\n        value: '{gutterNum: number, sizes: Array<number>}',\n        details: 'Emit when user clicks on a gutter. See <code>[gutterDblClickDuration]</code> input.',\n      },\n      {\n        name: 'transitionEnd',\n        value: 'Array<number>',\n        details:\n          'Emit when transition ends (could be triggered from <code>[visible]</code> or <code>[size]</code> changes).<br>Only if <code>[useTransition]=\"true\"</code>.<br><u>Warning: Transitions are not working for <a href=\"https://github.com/philipwalton/flexbugs#flexbug-16\">IE/Edge/Safari</a></u>',\n      },\n    ],\n    class: [\n      {\n        name: 'dragProgress$',\n        type: 'Observable<{gutterNum: number, sizes: Array<number>}>',\n        details: `Emit when dragging. Replace old <code>(dragProgress)</code> template event for better flexibility about change detection mechanism.<br><u>Warning: Running outside zone by design, if you need to notify angular add</u> <code>this.splitEl.dragProgress$.subscribe(x => this.ngZone.run(() => this.x = x));</code>`,\n      },\n      {\n        name: 'getVisibleAreaSizes()',\n        type: '() => Array<number>',\n        details: 'Get all <b>visible</b> area sizes.',\n      },\n      {\n        name: 'setVisibleAreaSizes()',\n        type: '(Array<number>) => boolean',\n        details:\n          'Set all <b>visible</b> area sizes in one go, return a boolean to know if input values were correct. Useful when combined with <code>dragProgress$</code> to sync multiple splits.',\n      },\n    ],\n  }\n\n  readonly splitAreaDoc = {\n    inputs: [\n      {\n        name: 'lockSize',\n        type: 'boolean',\n        default: 'false',\n        details: `Lock area size, same as <code>minSize</code> = <code>maxSize</code> = <code>size</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>`,\n      },\n      {\n        name: 'maxSize',\n        type: 'number',\n        default: 'null',\n        details: `Maximum pixel or percent size, should be equal to or larger than provided <code>[size]</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>`,\n      },\n      {\n        name: 'minSize',\n        type: 'number',\n        default: 'null',\n        details: `Minimum pixel or percent size, should be equal to or smaller than provided <code>[size]</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>`,\n      },\n      {\n        name: 'order',\n        type: 'number',\n        default: 'null',\n        details: `Order of the area. Used to maintain the order of areas when toggling their visibility. Toggling area visibility without specifying an <code>order</code> leads to weird behavior`,\n      },\n      {\n        name: 'size',\n        type: \"number|'*'\",\n        default: '-',\n        details: `Size of the area in selected unit (<code>percent</code>/<code>pixel</code>).<br><u>Percent mode:</u> All areas sizes should equal to 100, If not, all areas will have the same size.<br><u>Pixel mode:</u> An area with  wildcard size (<code>[size]=\"'*'\"</code>) is mandatory (only one) and can't have <code>[visible]=\"false\"</code> or <code>minSize</code>/<code>maxSize</code>/<code>lockSize</code> properties.`,\n      },\n      {\n        name: 'visible',\n        type: 'boolean',\n        default: 'true',\n        details: `Hide area visually but still present in the DOM, use <code>ngIf</code> to completely remove it.<br><u>Not working when <code>[size]=\"'*'\"</code></u>`,\n      },\n    ],\n  }\n\n  readonly cssClasses = {\n    split: [\n      { name: 'as-init', details: 'Added after component initialization.' },\n      {\n        name: 'as-horizontal / as-vertical',\n        details: 'Depends on <code>&lt;as-split [direction]=\"x\"&gt;</code>.',\n      },\n      {\n        name: 'as-disabled',\n        details: 'Added when <code>&lt;as-split [disabled]=\"true\"&gt;</code>.',\n      },\n      {\n        name: 'as-transition',\n        details: 'Added when <code>&lt;as-split [useTransition]=\"true\"&gt;</code>.',\n      },\n      { name: 'as-dragging', details: 'Added while a gutter is dragged.' },\n    ],\n    area: [\n      { name: 'as-split-area', details: 'Added on all areas.' },\n      {\n        name: 'as-hidden',\n        details: 'Added when <code>&lt;as-split-area [visible]=\"false\"&gt;</code>.',\n      },\n    ],\n    gutter: [\n      { name: 'as-split-gutter', details: 'Added on all gutters.' },\n      { name: 'as-dragged', details: 'Added on gutter while dragged.' },\n    ],\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { RouterModule } from '@angular/router'\nimport { DocumentationComponent } from './documentation.component'\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild([{ path: '', component: DocumentationComponent }])],\n  declarations: [DocumentationComponent],\n})\nexport class DocumentationModule {}\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n      :host {\n        display: block;\n        width: 100%;\n        margin: 50px 0;\n      }\n      h4 {\n        margin: 20px 0;\n      }\n      .sel {\n        font-size: 16px;\n        color: #adadad;\n      }\n      tr > th {\n        color: #adadad;\n      }\n      tr > th:first-child,\n      .selContent {\n        font-weight: bold;\n        color: #ffc421;\n      }\n      tr > td:first-child {\n        font-weight: bold;\n      }\n    \n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvY3VtZW50YXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7TUFDTTtRQUNFLGNBQWM7UUFDZCxXQUFXO1FBQ1gsY0FBYztNQUNoQjtNQUNBO1FBQ0UsY0FBYztNQUNoQjtNQUNBO1FBQ0UsZUFBZTtRQUNmLGNBQWM7TUFDaEI7TUFDQTtRQUNFLGNBQWM7TUFDaEI7TUFDQTs7UUFFRSxpQkFBaUI7UUFDakIsY0FBYztNQUNoQjtNQUNBO1FBQ0UsaUJBQWlCO01BQ25CIiwiZmlsZSI6ImRvY3VtZW50YXRpb24uY29tcG9uZW50LnRzIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICA6aG9zdCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luOiA1MHB4IDA7XG4gICAgICB9XG4gICAgICBoNCB7XG4gICAgICAgIG1hcmdpbjogMjBweCAwO1xuICAgICAgfVxuICAgICAgLnNlbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgY29sb3I6ICNhZGFkYWQ7XG4gICAgICB9XG4gICAgICB0ciA+IHRoIHtcbiAgICAgICAgY29sb3I6ICNhZGFkYWQ7XG4gICAgICB9XG4gICAgICB0ciA+IHRoOmZpcnN0LWNoaWxkLFxuICAgICAgLnNlbENvbnRlbnQge1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgY29sb3I6ICNmZmM0MjE7XG4gICAgICB9XG4gICAgICB0ciA+IHRkOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB9XG4gICAgIl19 */`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/documentation/documentation.component.ts\"],\"names\":[],\"mappings\":\";MACM;QACE,cAAc;QACd,WAAW;QACX,cAAc;MAChB;MACA;QACE,cAAc;MAChB;MACA;QACE,eAAe;QACf,cAAc;MAChB;MACA;QACE,cAAc;MAChB;MACA;;QAEE,iBAAiB;QACjB,cAAc;MAChB;MACA;QACE,iBAAiB;MACnB;;AAEN,wiCAAwiC\",\"sourcesContent\":[\"\\n      :host {\\n        display: block;\\n        width: 100%;\\n        margin: 50px 0;\\n      }\\n      h4 {\\n        margin: 20px 0;\\n      }\\n      .sel {\\n        font-size: 16px;\\n        color: #adadad;\\n      }\\n      tr > th {\\n        color: #adadad;\\n      }\\n      tr > th:first-child,\\n      .selContent {\\n        font-weight: bold;\\n        color: #ffc421;\\n      }\\n      tr > td:first-child {\\n        font-weight: bold;\\n      }\\n    \"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":["Component","DocumentationComponent","constructor","splitDoc","inputs","name","type","default","details","outputs","value","class","splitAreaDoc","cssClasses","split","area","gutter","__decorate","selector","template","__NG_CLI_RESOURCE__1","CommonModule","NgModule","RouterModule","DocumentationModule","imports","forChild","path","component","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}