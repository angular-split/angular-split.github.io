{"version":3,"sources":["./src/app/examples/gutter-click-roll-unroll/gutter-click-roll-unroll.component.ts","./src/app/examples/gutter-click-roll-unroll/gutter-click-roll-unroll.module.ts"],"names":[],"mappings":"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","file":"gutter-click-roll-unroll-gutter-click-roll-unroll-module.js","sourcesContent":["import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, OnDestroy, ViewChild } from '@angular/core'\nimport { SplitComponent } from 'angular-split'\nimport { Subscription } from 'rxjs'\n\nimport { AComponent } from '../../ui/components/AComponent'\nimport { formatDate } from '../../utils/format-date'\n\n@Component({\n  selector: 'sp-ex-gutter-click',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  styles: [\n    `\n      as-split.as-transition.as-init:not(.as-dragging) ::ng-deep > .as-split-gutter,\n      as-split.as-transition.as-init:not(.as-dragging) > .as-split-area {\n        transition: flex-basis 1.5s !important;\n      }\n      as-split.as-disabled ::ng-deep > .as-split-gutter {\n        cursor: pointer !important;\n      }\n\n      .btns {\n        display: flex;\n        justify-content: space-around;\n        flex-wrap: wrap;\n      }\n      .btns > div {\n        flex: 1 1 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n      .btns > div > button {\n        margin-bottom: 10px;\n      }\n      .logs > p {\n        margin-bottom: 5px;\n      }\n      .logs > ul {\n        height: 200px;\n        width: 100%;\n        overflow-y: scroll;\n        overflow-x: hidden;\n        border: 1px solid #bfbfbf;\n        background-color: #e8e8e8;\n      }\n    `,\n  ],\n  template: `\n    {{ testChangeDetectorRun() }}\n    <div class=\"container\">\n      <sp-example-title [type]=\"exampleEnum.CLICK\"></sp-example-title>\n      <div class=\"split-example\">\n        <as-split\n          #mySplit\n          [disabled]=\"isDisabled\"\n          gutterSize=\"10\"\n          [gutterDblClickDuration]=\"dblClickTime\"\n          direction=\"horizontal\"\n          [useTransition]=\"useTransition\"\n          (dragStart)=\"log('dragStart', $event)\"\n          (dragEnd)=\"log('dragEnd', $event)\"\n          (gutterClick)=\"log('gutterClick', $event)\"\n          (gutterDblClick)=\"log('gutterDblClick', $event)\"\n          (transitionEnd)=\"log('transitionEnd', $event)\"\n        >\n          <as-split-area *ngFor=\"let a of areas\" [size]=\"a.size\" [order]=\"a.order\">\n            <p>{{ a.content }}</p>\n          </as-split-area>\n        </as-split>\n      </div>\n      <br />\n      <div class=\"btns\">\n        <div>\n          <button class=\"btn btn-warning\" [class.active]=\"!useTransition\" (click)=\"useTransition = !useTransition\">\n            {{ 'useTransition: ' + useTransition }}\n          </button>\n        </div>\n        <div>\n          <button class=\"btn btn-warning\" [class.active]=\"!isDisabled\" (click)=\"isDisabled = !isDisabled\">\n            {{ 'isDisabled: ' + isDisabled }}\n          </button>\n        </div>\n        <div>\n          <label>Property <code>[gutterDblClickDuration]</code>:&nbsp;</label>\n          <div class=\"btn-group\">\n            <label\n              class=\"btn btn-warning\"\n              tooltip=\"When set to 0ms, 'click' is instant and 'dblclick' is impossible.\"\n              [class.disabled]=\"dblClickTime === 0\"\n              (click)=\"dblClickTime = 0\"\n              >0ms</label\n            >\n            <label\n              class=\"btn btn-warning\"\n              tooltip=\"When set to 500ms, 'click' is delayed and 'dblclick' is possible.\"\n              [class.disabled]=\"dblClickTime === 500\"\n              (click)=\"dblClickTime = 500\"\n              >500ms</label\n            >\n          </div>\n        </div>\n      </div>\n      <div class=\"logs\">\n        <p>All <code>as-split</code> events emitted:</p>\n        <ul #logs>\n          <li *ngFor=\"let l of logMessages\" [ngClass]=\"l.type\">{{ l.text }}</li>\n        </ul>\n      </div>\n    </div>\n  `,\n})\nexport class GutterClickRollUnrollComponent extends AComponent implements AfterViewInit, OnDestroy {\n  isDisabled = true\n  useTransition = true\n  dblClickTime = 0\n  logMessages: Array<{ type: string; text: string }> = []\n  areas = [\n    { size: 25, order: 1, content: 'fg fdkjuh dfskhf dkujv fd vifdk hvdkuh fg' },\n    { size: 50, order: 2, content: 'sd h vdshhf deuyf gduyeg hudeg hudfg  fd vifdk hvdkuh fg' },\n    { size: 25, order: 3, content: 'sd jslfd ijgil dfhlt jkgvbnhj fl bhjgflh jfglhj fl h fg' },\n  ]\n  sub: Subscription\n\n  @ViewChild('mySplit') mySplitEl: SplitComponent\n  @ViewChild('logs') logsEl: ElementRef\n\n  ngAfterViewInit() {\n    this.sub = this.mySplitEl.dragProgress$.subscribe((data) => {\n      console.log(\n        `${formatDate(\n          new Date(),\n        )} > dragProgress$ observable emitted but current component change detection didn't run!`,\n        data,\n      )\n    })\n  }\n\n  log(type: string, e: { gutterNum: number; sizes: Array<number> }) {\n    this.logMessages.push({ type, text: `${formatDate(new Date())} > ${type} event > ${JSON.stringify(e)}` })\n\n    setTimeout(() => {\n      if (this.logsEl.nativeElement.scroll) {\n        ;(<HTMLElement>this.logsEl.nativeElement).scroll({ top: this.logMessages.length * 30 })\n      }\n    })\n\n    if (type === 'gutterClick') {\n      this.gutterClick(e)\n    } else if (type === 'dragEnd') {\n      this.areas[0].size = e.sizes[0]\n      this.areas[1].size = e.sizes[1]\n      this.areas[2].size = e.sizes[2]\n    }\n  }\n\n  gutterClick(e: { gutterNum: number; sizes: Array<number> }) {\n    if (e.gutterNum === 1) {\n      if (this.areas[0].size > 0) {\n        this.areas[1].size += this.areas[0].size\n        this.areas[0].size = 0\n      } else if (this.areas[1].size > 25) {\n        this.areas[1].size -= 25\n        this.areas[0].size = 25\n      } else {\n        this.areas[0].size = 25\n        this.areas[1].size = 50\n        this.areas[2].size = 25\n      }\n    } else if (e.gutterNum === 2) {\n      if (this.areas[2].size > 0) {\n        this.areas[1].size += this.areas[2].size\n        this.areas[2].size = 0\n      } else if (this.areas[1].size > 25) {\n        this.areas[1].size -= 25\n        this.areas[2].size = 25\n      } else {\n        this.areas[0].size = 25\n        this.areas[1].size = 50\n        this.areas[2].size = 25\n      }\n    }\n  }\n\n  dragEnd(e: { gutterNum: number; sizes: Array<number> }) {\n    this.areas[0].size = e.sizes[0]\n    this.areas[1].size = e.sizes[1]\n    this.areas[2].size = e.sizes[2]\n  }\n\n  ngOnDestroy() {\n    if (this.sub) this.sub.unsubscribe()\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { RouterModule } from '@angular/router'\nimport { AngularSplitModule } from 'angular-split'\nimport { UiModule } from '../../ui/ui.module'\nimport { GutterClickRollUnrollComponent } from './gutter-click-roll-unroll.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UiModule,\n    RouterModule.forChild([{ path: '', component: GutterClickRollUnrollComponent }]),\n    AngularSplitModule,\n  ],\n  declarations: [GutterClickRollUnrollComponent],\n})\nexport class GutterClickRollUnrollModule {}\n"],"sourceRoot":"webpack:///"}