"use strict";(self.webpackChunkangular_split_app=self.webpackChunkangular_split_app||[]).push([[874],{2874:(_,s,r)=>{r.r(s),r.d(s,{DocumentationModule:()=>A});var l=r(6814),d=r(7276),e=r(9467);function u(t,i){if(1&t&&(e.TgZ(0,"tr")(1,"td"),e._uU(2),e.qZA(),e.TgZ(3,"td"),e._uU(4),e.qZA(),e.TgZ(5,"td")(6,"code"),e._uU(7),e.qZA()(),e._UZ(8,"td",6),e.qZA()),2&t){const a=i.$implicit;e.xp6(2),e.Oqu(a.name),e.xp6(2),e.Oqu(a.type),e.xp6(3),e.Oqu(a.default),e.xp6(1),e.Q6J("innerHTML",a.details,e.oJD)}}function c(t,i){if(1&t&&(e.TgZ(0,"tr")(1,"td"),e._uU(2),e.qZA(),e.TgZ(3,"td")(4,"code"),e._uU(5),e.qZA()(),e._UZ(6,"td",6),e.qZA()),2&t){const a=i.$implicit;e.xp6(2),e.Oqu(a.name),e.xp6(3),e.Oqu(a.value),e.xp6(1),e.Q6J("innerHTML",a.details,e.oJD)}}function g(t,i){if(1&t&&(e.TgZ(0,"tr")(1,"td"),e._uU(2),e.qZA(),e.TgZ(3,"td")(4,"code"),e._uU(5),e.qZA()(),e._UZ(6,"td",6),e.qZA()),2&t){const a=i.$implicit;e.xp6(2),e.Oqu(a.name),e.xp6(3),e.Oqu(a.type),e.xp6(1),e.Q6J("innerHTML",a.details,e.oJD)}}function p(t,i){if(1&t&&(e.TgZ(0,"tr")(1,"td"),e._uU(2),e.qZA(),e.TgZ(3,"td"),e._uU(4),e.qZA(),e.TgZ(5,"td")(6,"code"),e._uU(7),e.qZA()(),e._UZ(8,"td",6),e.qZA()),2&t){const a=i.$implicit;e.xp6(2),e.Oqu(a.name),e.xp6(2),e.Oqu(a.type),e.xp6(3),e.Oqu(a.default),e.xp6(1),e.Q6J("innerHTML",a.details,e.oJD)}}function m(t,i){if(1&t&&(e.TgZ(0,"tr")(1,"td"),e._uU(2),e.qZA(),e.TgZ(3,"td"),e._uU(4),e.qZA(),e._UZ(5,"td",6),e.qZA()),2&t){const a=i.$implicit;e.xp6(2),e.Oqu(a.name),e.xp6(2),e.Oqu(a.type),e.xp6(1),e.Q6J("innerHTML",a.details,e.oJD)}}function h(t,i){if(1&t&&(e.TgZ(0,"tr")(1,"td")(2,"code"),e._uU(3),e.qZA()(),e._UZ(4,"td",6),e.qZA()),2&t){const a=i.$implicit;e.xp6(3),e.Oqu(a.name),e.xp6(1),e.Q6J("innerHTML",a.details,e.oJD)}}function Z(t,i){if(1&t&&(e.TgZ(0,"tr")(1,"td")(2,"code"),e._uU(3),e.qZA()(),e._UZ(4,"td",6),e.qZA()),2&t){const a=i.$implicit;e.xp6(3),e.Oqu(a.name),e.xp6(1),e.Q6J("innerHTML",a.details,e.oJD)}}function b(t,i){if(1&t&&(e.TgZ(0,"tr")(1,"td")(2,"code"),e._uU(3),e.qZA()(),e._UZ(4,"td",6),e.qZA()),2&t){const a=i.$implicit;e.xp6(3),e.Oqu(a.name),e.xp6(1),e.Q6J("innerHTML",a.details,e.oJD)}}let f=(()=>{var t;class i{constructor(){this.splitDoc={inputs:[{name:"dir",type:"string",default:'"ltr"',details:'Indicates the directionality of the areas: <code>"ltr"</code> (left to right) or <code>"rtl"</code> (right to left).'},{name:"direction",type:"string",default:'"horizontal"',details:'Select split direction: <code>"horizontal"</code> or <code>"vertical"</code>.'},{name:"disabled",type:"boolean",default:"false",details:"Disable the dragging feature (remove cursor/image on gutters). <code>(gutterClick)</code>/<code>(gutterDblClick)</code> still emits."},{name:"gutterAriaLabel",type:"string",default:"null",details:"Aria label for the gutter."},{name:"gutterDblClickDuration",type:"number",default:"0",details:"Milliseconds to detect a double click on a gutter. Set it around 300-500ms if you want to use <code>(gutterDblClick)</code> event."},{name:"gutterSize",type:"number",default:"11",details:"Gutters's size (dragging elements) in pixels."},{name:"gutterStep",type:"number",default:"1",details:"Gutter step while moving in pixels."},{name:"restrictMove",type:"boolean",default:"false",details:"Set to <code>true</code> if you want to limit gutter move to adjacent areas only."},{name:"unit",type:"string",default:'"percent"',details:'Selected unit you want to use: <code>"percent"</code> or <code>"pixel"</code> to specify area sizes.'},{name:"useTransition",type:"boolean",default:"false",details:'Add transition when toggling visibility using <code>[visible]</code> or <code>[size]</code> changes.<br><u>Warning: Transitions are not working for <a href="https://github.com/philipwalton/flexbugs#flexbug-16">IE/Edge/Safari</a></u>'}],outputs:[{name:"dragEnd",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when drag ends."},{name:"dragStart",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when drag starts."},{name:"gutterDblClick",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when user double clicks on a gutter. See <code>[gutterDblClickDuration]</code> input."},{name:"gutterClick",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when user clicks on a gutter. See <code>[gutterDblClickDuration]</code> input."},{name:"transitionEnd",value:"Array<number>",details:'Emit when transition ends (could be triggered from <code>[visible]</code> or <code>[size]</code> changes).<br>Only if <code>[useTransition]="true"</code>.<br><u>Warning: Transitions are not working for <a href="https://github.com/philipwalton/flexbugs#flexbug-16">IE/Edge/Safari</a></u>'}],class:[{name:"dragProgress$",type:"Observable<{gutterNum: number, sizes: Array<number>}>",details:"Emit when dragging. Replace old <code>(dragProgress)</code> template event for better flexibility about change detection mechanism.<br><u>Warning: Running outside zone by design, if you need to notify angular add</u> <code>this.splitEl.dragProgress$.subscribe(x => this.ngZone.run(() => this.x = x));</code>"},{name:"getVisibleAreaSizes()",type:"() => Array<number>",details:"Get all <b>visible</b> area sizes."},{name:"setVisibleAreaSizes()",type:"(Array<number>) => boolean",details:"Set all <b>visible</b> area sizes in one go, return a boolean to know if input values were correct. Useful when combined with <code>dragProgress$</code> to sync multiple splits."}]},this.splitAreaDoc={inputs:[{name:"lockSize",type:"boolean",default:"false",details:"Lock area size, same as <code>minSize</code> = <code>maxSize</code> = <code>size</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"},{name:"maxSize",type:"number",default:"null",details:"Maximum pixel or percent size, should be equal to or larger than provided <code>[size]</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"},{name:"minSize",type:"number",default:"null",details:"Minimum pixel or percent size, should be equal to or smaller than provided <code>[size]</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"},{name:"order",type:"number",default:"null",details:"Order of the area. Used to maintain the order of areas when toggling their visibility. Toggling area visibility without specifying an <code>order</code> leads to weird behavior"},{name:"size",type:"number|'*'",default:"-",details:'Size of the area in selected unit (<code>percent</code>/<code>pixel</code>).<br><u>Percent mode:</u> All areas sizes should equal to 100, If not, all areas will have the same size.<br><u>Pixel mode:</u> An area with  wildcard size (<code>[size]="\'*\'"</code>) is mandatory (only one) and can\'t have <code>[visible]="false"</code> or <code>minSize</code>/<code>maxSize</code>/<code>lockSize</code> properties.'},{name:"visible",type:"boolean",default:"true",details:"Hide area visually but still present in the DOM, use <code>ngIf</code> to completely remove it.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"}]},this.splitGutterDoc={templateContext:[{name:"areaBefore",type:"IArea",details:"The area before the gutter. In RTL the right area and in LTR the left area"},{name:"areaAfter",type:"IArea",details:"The area after the gutter. In RTL the left area and in LTR the right area"},{name:"gutterNum",type:"number",details:"The absolute number of the gutter based on direction (RTL and LTR). First gutter is 1, second is 2, etc..."},{name:"first",type:"boolean",details:"Whether this is the first gutter. In RTL the most right area and in LTR the most left area"},{name:"last",type:"boolean",details:"Whether this is the last gutter. In RTL the most left area and in LTR the most right area"},{name:"isDragged",type:"boolean",details:"Whether the gutter is being dragged now"}]},this.cssClasses={split:[{name:"as-init",details:"Added after component initialization."},{name:"as-horizontal / as-vertical",details:'Depends on <code>&lt;as-split [direction]="x"&gt;</code>.'},{name:"as-disabled",details:'Added when <code>&lt;as-split [disabled]="true"&gt;</code>.'},{name:"as-transition",details:'Added when <code>&lt;as-split [useTransition]="true"&gt;</code>.'},{name:"as-dragging",details:"Added while a gutter is dragged."}],area:[{name:"as-split-area",details:"Added on all areas."},{name:"as-hidden",details:'Added when <code>&lt;as-split-area [visible]="false"&gt;</code>.'}],gutter:[{name:"as-split-gutter",details:"Added on all gutters."},{name:"as-dragged",details:"Added on gutter while dragged."}]}}}return(t=i).\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["sp-doc"]],decls:169,vars:8,consts:[[1,"container"],[1,"sel"],[1,"selContent"],[1,"table","table-striped"],[4,"ngFor","ngForOf"],[2,"width","40%"],[3,"innerHTML"]],template:function(o,n){1&o&&(e.TgZ(0,"div",0)(1,"h4")(2,"b"),e._uU(3,"SplitComponent"),e.qZA(),e._uU(4,"\xa0"),e.TgZ(5,"span",1),e._uU(6,"(selector: '"),e.TgZ(7,"span",2),e._uU(8,"as-split"),e.qZA(),e._uU(9,"' / exportAs: '"),e.TgZ(10,"span",2),e._uU(11,"asSplit"),e.qZA(),e._uU(12,"')"),e.qZA()(),e.TgZ(13,"table",3)(14,"thead")(15,"tr")(16,"th"),e._uU(17,"@Input()"),e.qZA(),e.TgZ(18,"th"),e._uU(19,"Type"),e.qZA(),e.TgZ(20,"th"),e._uU(21,"Default"),e.qZA(),e.TgZ(22,"th"),e._uU(23,"Details"),e.qZA()()(),e.TgZ(24,"tbody"),e.YNc(25,u,9,4,"tr",4),e.qZA()(),e.TgZ(26,"table",3)(27,"thead")(28,"tr")(29,"th"),e._uU(30,"@Output()"),e.qZA(),e.TgZ(31,"th"),e._uU(32,"Value"),e.qZA(),e.TgZ(33,"th"),e._uU(34,"Details"),e.qZA()()(),e.TgZ(35,"tbody"),e.YNc(36,c,7,3,"tr",4),e.qZA()(),e.TgZ(37,"table",3)(38,"thead")(39,"tr")(40,"th"),e._uU(41,"Access from TS class"),e.qZA(),e.TgZ(42,"th"),e._uU(43,"Type"),e.qZA(),e.TgZ(44,"th"),e._uU(45,"Details"),e.qZA()()(),e.TgZ(46,"tbody"),e.YNc(47,g,7,3,"tr",4),e.qZA()(),e._UZ(48,"br")(49,"br"),e.TgZ(50,"h4")(51,"b"),e._uU(52,"SplitAreaDirective"),e.qZA(),e._uU(53,"\xa0"),e.TgZ(54,"span",1),e._uU(55,"(selector: '"),e.TgZ(56,"span",2),e._uU(57,"as-split-area, [as-split-area]"),e.qZA(),e._uU(58,"' / exportAs: '"),e.TgZ(59,"span",2),e._uU(60,"asSplitArea"),e.qZA(),e._uU(61,"')"),e.qZA()(),e.TgZ(62,"table",3)(63,"thead")(64,"tr")(65,"th"),e._uU(66,"@Input()"),e.qZA(),e.TgZ(67,"th"),e._uU(68,"Type"),e.qZA(),e.TgZ(69,"th"),e._uU(70,"Default"),e.qZA(),e.TgZ(71,"th"),e._uU(72,"Details"),e.qZA()()(),e.TgZ(73,"tbody"),e.YNc(74,p,9,4,"tr",4),e.qZA()(),e._UZ(75,"br")(76,"br"),e.TgZ(77,"h4")(78,"b"),e._uU(79,"SplitGutterDirective"),e.qZA(),e._uU(80,"\xa0"),e.TgZ(81,"span",1),e._uU(82,"(selector: '"),e.TgZ(83,"span",2),e._uU(84,"[asSplitGutter]"),e.qZA(),e._uU(85," ')"),e.qZA()(),e.TgZ(86,"p"),e._uU(87,"Used as structural directive (*asSplitGutter) to customize the gutter."),e.qZA(),e.TgZ(88,"p"),e._uU(89,"Mostly requires width: 100% and height: 100% in order to fill the whole gutter."),e.qZA(),e.TgZ(90,"p"),e._uU(91,"If the custom gutter is wider than the declared gutter size (using gutterSize input) the areas will overflow too. So attention is required to match the size of the gutter."),e.qZA(),e.TgZ(92,"table",3)(93,"thead")(94,"tr")(95,"th"),e._uU(96,"Template context property"),e.qZA(),e.TgZ(97,"th"),e._uU(98,"Type"),e.qZA(),e.TgZ(99,"th"),e._uU(100,"Details"),e.qZA()()(),e.TgZ(101,"tbody"),e.YNc(102,m,6,3,"tr",4),e.qZA()(),e._UZ(103,"br")(104,"br"),e.TgZ(105,"h4")(106,"b"),e._uU(107,"SplitGutterDragHandleDirective"),e.qZA(),e._uU(108,"\xa0"),e.TgZ(109,"span",1),e._uU(110,"(selector: '"),e.TgZ(111,"span",2),e._uU(112,"[asSplitGutterDragHandle]"),e.qZA(),e._uU(113," ')"),e.qZA()(),e.TgZ(114,"p"),e._uU(115,"Used to declare an area inside asSplitGutter to be a drag handle"),e.qZA(),e.TgZ(116,"p"),e._uU(117,"Can be declared on multiple elements which means all of them are drag handles."),e.qZA(),e._UZ(118,"br")(119,"br"),e.TgZ(120,"h4")(121,"b"),e._uU(122,"SplitGutterExcludeFromDragDirective"),e.qZA(),e._uU(123,"\xa0"),e.TgZ(124,"span",1),e._uU(125,"(selector: '"),e.TgZ(126,"span",2),e._uU(127,"[asSplitGutterExcludeFromDrag]"),e.qZA(),e._uU(128," ')"),e.qZA()(),e.TgZ(129,"p"),e._uU(130,"Used to declare an area inside asSplitGutter to be excluded from drag"),e.qZA(),e.TgZ(131,"p"),e._uU(132,"Can be declared on multiple elements which means all of them are excluded from drag."),e.qZA(),e.TgZ(133,"p"),e._uU(134,"asSplitGutterExcludeFromDrag inside asSplitGutterDragHandle works as expected (all of the element is a handle except the excluded area)"),e.qZA(),e.TgZ(135,"p"),e._uU(136,"asSplitGutterDragHandle inside asSplitGutterExcludeFromDrag is ignored and the whole element marked with exclude is excluded."),e.qZA(),e._UZ(137,"br")(138,"br"),e.TgZ(139,"h4")(140,"b"),e._uU(141,"CSS classes"),e.qZA()(),e.TgZ(142,"table",3)(143,"thead")(144,"tr")(145,"th",5),e._uU(146,"Split element classes"),e.qZA(),e.TgZ(147,"th"),e._uU(148,"Details"),e.qZA()()(),e.TgZ(149,"tbody"),e.YNc(150,h,5,2,"tr",4),e.qZA()(),e.TgZ(151,"table",3)(152,"thead")(153,"tr")(154,"th",5),e._uU(155,"Area element classes"),e.qZA(),e.TgZ(156,"th"),e._uU(157,"Details"),e.qZA()()(),e.TgZ(158,"tbody"),e.YNc(159,Z,5,2,"tr",4),e.qZA()(),e.TgZ(160,"table",3)(161,"thead")(162,"tr")(163,"th",5),e._uU(164,"Gutter element classes"),e.qZA(),e.TgZ(165,"th"),e._uU(166,"Details"),e.qZA()()(),e.TgZ(167,"tbody"),e.YNc(168,b,5,2,"tr",4),e.qZA()()()),2&o&&(e.xp6(25),e.Q6J("ngForOf",n.splitDoc.inputs),e.xp6(11),e.Q6J("ngForOf",n.splitDoc.outputs),e.xp6(11),e.Q6J("ngForOf",n.splitDoc.class),e.xp6(27),e.Q6J("ngForOf",n.splitAreaDoc.inputs),e.xp6(28),e.Q6J("ngForOf",n.splitGutterDoc.templateContext),e.xp6(48),e.Q6J("ngForOf",n.cssClasses.split),e.xp6(9),e.Q6J("ngForOf",n.cssClasses.area),e.xp6(9),e.Q6J("ngForOf",n.cssClasses.gutter))},dependencies:[l.sg],styles:["[_nghost-%COMP%]{display:block;width:100%;margin:50px 0}h4[_ngcontent-%COMP%]{margin:20px 0}.sel[_ngcontent-%COMP%]{font-size:16px;color:#adadad}tr[_ngcontent-%COMP%] > th[_ngcontent-%COMP%]{color:#adadad}tr[_ngcontent-%COMP%] > th[_ngcontent-%COMP%]:first-child, .selContent[_ngcontent-%COMP%]{font-weight:700;color:#ffc421}tr[_ngcontent-%COMP%] > td[_ngcontent-%COMP%]:first-child{font-weight:700}"]}),i})(),A=(()=>{var t;class i{}return(t=i).\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[l.ez,d.Bz.forChild([{path:"",component:f}])]}),i})()}}]);